{"ast":null,"code":"import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { serverPort } from \"../const\";\nconst $host = axios.create({\n  baseURL: serverPort\n});\nexport const registration = async (login, email, name, surname, patronymic, password) => {\n  const {\n    data\n  } = await $host.post(\"/registration\", {\n    name,\n    surname,\n    name,\n    email,\n    login,\n    password\n  });\n  if (data[0] === true) {\n    localStorage.setItem(\"token\", data[1].token);\n    return jwtDecode(data[1].token);\n  } else {\n    alert(\"Пользователь с такой почтой или логином уже зарегистрирован\");\n  }\n};\nexport const authUser = async (login, password) => {\n  const {\n    data\n  } = await $host.post(\"/auth\", {\n    login,\n    password\n  });\n  if (data[0] === true) {\n    localStorage.setItem(\"token\", data[1].token);\n    return true;\n  } else {\n    alert(\"Не правильный логин или пароль\");\n    return false;\n  }\n};\nexport const reserveFunction = async (fio, number, places) => {\n  const {\n    data\n  } = await $host.post('/api/booking/postBooking', {\n    fio,\n    number,\n    places\n  });\n  return data;\n};\nexport const orderFunction = async (fio, number, order) => {\n  const {\n    data\n  } = await $host.post('/api/order/addOrder', {\n    fio,\n    number,\n    order\n  });\n  return data;\n};\nexport const updatePhonedFunction = async id_booking => {\n  const {\n    data\n  } = await $host.post('/api/booking/updatePhoned', {\n    id_booking\n  });\n  return data;\n};\nexport const updateBookingFunction = async id_booking => {\n  const {\n    data\n  } = await $host.post('/api/booking/updateBooking', {\n    id_booking\n  });\n  return data;\n};\nexport const updatePhonedOrderFunction = async id_order => {\n  const {\n    data\n  } = await $host.post('/api/order/updatePhoned', {\n    id_order\n  });\n  return data;\n};\nexport const updateOrderingFunction = async id_order => {\n  const {\n    data\n  } = await $host.post('/api/order/updateOrdering', {\n    id_order\n  });\n  return data;\n};\nexport const addPostFunction = async formdata => {\n  const {\n    data\n  } = await $host.post('/api/post/addPost', formdata);\n  return data;\n};\nexport const getAllPosts = async () => {\n  const {\n    data\n  } = await $host.get('/api/post/getPosts');\n  return data;\n};\nexport const authFunction = async (admin, password) => {\n  const {\n    data\n  } = await $host.post('/api/admin/checkAdmin', {\n    admin,\n    password\n  });\n  if (data[0] === true) {\n    localStorage.setItem(\"token\", data[1].token);\n    return true;\n  } else {\n    alert(\"Не правильный логин или пароль\");\n    return false;\n  }\n};","map":{"version":3,"names":["axios","jwtDecode","serverPort","$host","create","baseURL","registration","login","email","name","surname","patronymic","password","data","post","localStorage","setItem","token","alert","authUser","reserveFunction","fio","number","places","orderFunction","order","updatePhonedFunction","id_booking","updateBookingFunction","updatePhonedOrderFunction","id_order","updateOrderingFunction","addPostFunction","formdata","getAllPosts","get","authFunction","admin"],"sources":["C:/Users/KittyBonny/Documents/GitHub/Diplom/client/src/queries/mainQuery.js"],"sourcesContent":["import axios from \"axios\"\nimport jwtDecode from \"jwt-decode\"\nimport { serverPort } from \"../const\"\n\nconst $host = axios.create({\n\tbaseURL: serverPort\n})\n\nexport const registration = async (login, email, name, surname, patronymic, password) => {\n\tconst {data} = await $host.post(\"/registration\", {name, surname, name, email, login, password})\n\tif(data[0] === true) {\n\t\tlocalStorage.setItem(\"token\", data[1].token)\n\t\treturn jwtDecode(data[1].token)\n\t}else{\n\t\talert(\"Пользователь с такой почтой или логином уже зарегистрирован\")\n\t}\n}\n\n\nexport const authUser =  async (login, password) => {\n\tconst {data} = await $host.post(\"/auth\", {login, password})\n\tif(data[0] === true) {\n\t\tlocalStorage.setItem(\"token\", data[1].token)\n\t\treturn true\n\t}else{\n\t\talert(\"Не правильный логин или пароль\")\n\t\treturn false\n\t}\n}\n\nexport const reserveFunction = async (fio, number, places) => {\n    const {data} = await $host.post('/api/booking/postBooking', {fio, number, places})\n    return data\n}\n\nexport const orderFunction = async (fio, number, order) => {\n    const {data} = await $host.post('/api/order/addOrder', {fio, number, order})\n    return data\n}\n\nexport const updatePhonedFunction = async (id_booking) => {\n    const {data} = await $host.post('/api/booking/updatePhoned', { id_booking })\n    return data\n}\n\nexport const updateBookingFunction = async (id_booking) => {\n    const {data} = await $host.post('/api/booking/updateBooking', {id_booking})\n    return data\n}\n\nexport const updatePhonedOrderFunction = async (id_order) => {\n    const {data} = await $host.post('/api/order/updatePhoned', {id_order})\n    return data\n}\n\nexport const updateOrderingFunction = async (id_order) => {\n    const {data} = await $host.post('/api/order/updateOrdering', {id_order})\n    return data\n}\n\nexport const addPostFunction = async (formdata) => {\n    const {data} = await $host.post('/api/post/addPost', formdata)\n    return data\n}\n\nexport const getAllPosts = async () => {\n    const {data} = await $host.get('/api/post/getPosts')\n    return data\n}\n\nexport const authFunction = async (admin, password) => {\n    const {data} = await $host.post('/api/admin/checkAdmin', {admin, password})\n    if(data[0] === true) {\n\t\tlocalStorage.setItem(\"token\", data[1].token)\n\t\treturn true\n\t}else{\n\t\talert(\"Не правильный логин или пароль\")\n\t\treturn false\n\t}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}