{"ast":null,"code":"import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { serverPort } from \"../const\";\nconst $host = axios.create({\n  baseURL: serverPort\n});\nexport const registration = async (name, surname, email, login, password) => {\n  const {\n    data\n  } = await $host.post(\"/registration\", {\n    name,\n    surname,\n    email,\n    login,\n    password\n  });\n  if (data[0] === true) {\n    localStorage.setItem(\"token\", data[1].token);\n    return jwtDecode(data[1].token);\n  } else {\n    alert(\"Пользователь с такой почтой или логином уже зарегистрирован\");\n  }\n};\n// export const familyPoll = async ()\n\nexport const authUser = async (login, password) => {\n  const {\n    data\n  } = await $host.post(\"/login\", {\n    login,\n    password\n  });\n  if (data[0] === true) {\n    localStorage.setItem(\"token\", data[1].token);\n    return true;\n  } else {\n    alert(\"Не правильный логин или пароль\");\n    return false;\n  }\n};","map":{"version":3,"names":["axios","jwtDecode","serverPort","$host","create","baseURL","registration","name","surname","email","login","password","data","post","localStorage","setItem","token","alert","authUser"],"sources":["C:/Users/VPR/Desktop/Новая папка/Diplom/client/src/queries/mainQuery.js"],"sourcesContent":["import axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { serverPort } from \"../const\";\r\n\r\nconst $host = axios.create({\r\n  baseURL: serverPort,\r\n});\r\n\r\nexport const registration = async (name, surname, email, login, password) => {\r\n  const { data } = await $host.post(\"/registration\", {\r\n    name,\r\n    surname,\r\n    email,\r\n    login,\r\n    password,\r\n  });\r\n  if (data[0] === true) {\r\n    localStorage.setItem(\"token\", data[1].token);\r\n    return jwtDecode(data[1].token);\r\n  } else {\r\n    alert(\"Пользователь с такой почтой или логином уже зарегистрирован\");\r\n  }\r\n};\r\n// export const familyPoll = async ()\r\n\r\nexport const authUser = async (login, password) => {\r\n  const { data } = await $host.post(\"/login\", { login, password });\r\n  if (data[0] === true) {\r\n    localStorage.setItem(\"token\", data[1].token);\r\n    return true;\r\n  } else {\r\n    alert(\"Не правильный логин или пароль\");\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,QAAQ,UAAU;AAErC,MAAMC,KAAK,GAAGH,KAAK,CAACI,MAAM,CAAC;EACzBC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAC3E,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,eAAe,EAAE;IACjDN,IAAI;IACJC,OAAO;IACPC,KAAK;IACLC,KAAK;IACLC;EACF,CAAC,CAAC;EACF,IAAIC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;IACpBE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC;IAC5C,OAAOf,SAAS,CAACW,IAAI,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC;EACjC,CAAC,MAAM;IACLC,KAAK,CAAC,6DAA6D,CAAC;EACtE;AACF,CAAC;AACD;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOR,KAAK,EAAEC,QAAQ,KAAK;EACjD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,QAAQ,EAAE;IAAEH,KAAK;IAAEC;EAAS,CAAC,CAAC;EAChE,IAAIC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;IACpBE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb,CAAC,MAAM;IACLC,KAAK,CAAC,gCAAgC,CAAC;IACvC,OAAO,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}